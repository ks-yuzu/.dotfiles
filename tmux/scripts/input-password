#!/usr/bin/env bash
set -euo pipefail

# usage:
#   1. security add-generic-password -s LDAP -a <username> -w <password> しておく
#   2. bind <key> run "<path/to/me> #{pane_tty}" 等の設定をする

here=$(cd $(dirname $0); pwd)

# settings
SNIPPET_PANE_HEIGHT=15
CONFIG_PATH=$here/input-password.config.yaml

# read config
IDS=$(yq -r '.[] | "service: \(.service), user: \(.user)"' $CONFIG_PATH | column -s, -t)
PATTERNS=$(yq -r '.[] | {service,user} + (.prompt_patterns[] | {pattern:.}) | "\(.service) \(.user) \(.pattern)"' $CONFIG_PATH)

## check echoback (ssh 先の時に困るので一旦無効化)
# this=$1
# if [[ -z "$(stty --file $this | grep '\b\-echo\b')" ]]; then
#     echo '[warn] echo back enabled!!'
#     exit 0
# fi

# create named pipe
PIPE=/tmp/_tmux_snippet_command_pipe
[ -p $PIPE ] || mkfifo $PIPE

# generate command executed in another pane
ACTIVE_PANE_ID=`tmux list-panes -F '#{pane_active},#{pane_index}' | grep '^1' | cut -d, -f2-`
LAST_LINE=$(tmux capture-pane -t $ACTIVE_PANE_ID -pS -32768 | grep -v '^$' | tail -n1)
QUERY=

# guess account from prompt
IFS=$'\n'
for p in $(echo "$PATTERNS"); do
  IFS=' ' read SERVICE USER REGEX <<< "$p"
  if [[ "$LAST_LINE" =~ $REGEX ]]; then
    QUERY="$SERVICE"
    break
  fi
done
unset IFS

COMMAND='\
read s _SERVICE u _USER <<<$(echo "'"$IDS"'" | peco --query "'"$QUERY"'" | sed "s/,//g");
(security find-generic-password -s "$_SERVICE" -a "$_USER" -w > "'"$PIPE"'" &)\
  && tmux send-key -t "'"$ACTIVE_PANE_ID"'" "$(cat "'"$PIPE"'")"'

tmux split-window -l${SNIPPET_PANE_HEIGHT} "$COMMAND"
